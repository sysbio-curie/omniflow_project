{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "55b5595c-fec9-41c3-b756-b95cd0c52048",
   "metadata": {},
   "source": [
    "# Map tissue expression\n",
    "\n",
    "This notebook explores how you can explore whether the nodes in your network are expressed in a tissue of interest. The annotations are accessed from the Annotation object of Omnipath, and are based on expression data from the Human Protein Atlas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3c317de8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 15.5 s, sys: 637 ms, total: 16.1 s\n",
      "Wall time: 17.8 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "from neko.core.network import Network\n",
    "from neko._visual.visualize_network import NetworkVisualizer\n",
    "from neko._inputs.resources import Resources\n",
    "from neko._annotations.gene_ontology import Ontology\n",
    "import omnipath as op"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2910c871-fdfc-4d20-b76f-af213f06a3f0",
   "metadata": {},
   "source": [
    "## 1. Import genes as network nodes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "79c09e13",
   "metadata": {},
   "outputs": [],
   "source": [
    "genes = [\"SRC\", \"NOTCH1\", \"FAK\", \"CDH1\", \"CDH2\", \"VIM\", \"MAP4K4\", \"LATS1\", \"LATS2\", \"PTK2B\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fcf68a99-8454-41e3-8816-c3f976d04c0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_net1 = Network(genes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fad00bec-ba72-4943-bf1e-9c60f58f17a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Genesymbol</th>\n",
       "      <th>Uniprot</th>\n",
       "      <th>Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>SRC</td>\n",
       "      <td>P12931</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NOTCH1</td>\n",
       "      <td>P46531</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>PTK2</td>\n",
       "      <td>Q05397</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CDH1</td>\n",
       "      <td>P12830</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CDH2</td>\n",
       "      <td>P19022</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>VIM</td>\n",
       "      <td>P08670</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>MAP4K4</td>\n",
       "      <td>O95819</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>LATS1</td>\n",
       "      <td>O95835</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>LATS2</td>\n",
       "      <td>Q9NRM7</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>PTK2B</td>\n",
       "      <td>Q14289</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Genesymbol Uniprot Type\n",
       "0        SRC  P12931  NaN\n",
       "1     NOTCH1  P46531  NaN\n",
       "2       PTK2  Q05397  NaN\n",
       "3       CDH1  P12830  NaN\n",
       "4       CDH2  P19022  NaN\n",
       "5        VIM  P08670  NaN\n",
       "6     MAP4K4  O95819  NaN\n",
       "7      LATS1  O95835  NaN\n",
       "8      LATS2  Q9NRM7  NaN\n",
       "9      PTK2B  Q14289  NaN"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Print node dataframe\n",
    "new_net1.nodes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e9006ec-00d2-453d-8b8f-e939938e9068",
   "metadata": {},
   "source": [
    "## 2. Check if the genes are annotated in the tissue of interest (e.g., in colorectal cancer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9540f33d-68f8-4c98-b68e-3e3d1497467e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ee85954aab2a4c4cb3840fe4e961f089",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fc92fe202aad4b5fb44fe97c7220a75b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a2856a0b788c4dd8b7aac9a77f4bf1b0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b0d7c1b9ab144f1482a9fcb563d5923c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "81cfb31c8f044e8f98af62fd19306bbf",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8249aac8ef584d639c596c6d8a03734e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "23e2cf203ed0438b9d5b8d8b1df69350",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a283637fd1f24a0cb187b9784f10a208",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1fe783c76dd747e082f92f2a7f919c64",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "6eb1ce2981a84c7cb8a403d18fb04cce",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Genesymbol  in_tissue\n",
      "0        SRC       True\n",
      "1     NOTCH1       True\n",
      "2       PTK2       True\n",
      "3       CDH1       True\n",
      "4       CDH2       True\n",
      "5        VIM       True\n",
      "6     MAP4K4       True\n",
      "7      LATS1       True\n",
      "8      LATS2       True\n",
      "9      PTK2B       True\n"
     ]
    }
   ],
   "source": [
    "annot = Ontology()\n",
    "results_df = annot.check_tissue_annotations(genes_df = new_net1.nodes, tissue = 'colorectal cancer')\n",
    "print(results_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a05e120-424b-405f-be04-f8c3725f950b",
   "metadata": {},
   "source": [
    "## 3. Color nodes based on their presence/absence in the tissue of interest\n",
    "\n",
    "The `tissue_mapping` functions highligts as light blue all the nodes of the network that are expressed in the used-defined system."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fbd98405-045a-4316-8174-e96e9a71d9ee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.43.0 (0)\n",
       " -->\n",
       "<!-- Title: %3 Pages: 1 -->\n",
       "<svg width=\"971pt\" height=\"44pt\"\n",
       " viewBox=\"0.00 0.00 970.79 44.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 40)\">\n",
       "<title>%3</title>\n",
       "<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-40 966.79,-40 966.79,4 -4,4\"/>\n",
       "<!-- SRC -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>SRC</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"30.55\" cy=\"-18\" rx=\"30.59\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"30.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">SRC</text>\n",
       "</g>\n",
       "<!-- NOTCH1 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>NOTCH1</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"131.55\" cy=\"-18\" rx=\"51.99\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"131.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">NOTCH1</text>\n",
       "</g>\n",
       "<!-- PTK2 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>PTK2</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"237.55\" cy=\"-18\" rx=\"36\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"237.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">PTK2</text>\n",
       "</g>\n",
       "<!-- CDH1 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>CDH1</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"329.55\" cy=\"-18\" rx=\"38.19\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"329.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">CDH1</text>\n",
       "</g>\n",
       "<!-- CDH2 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>CDH2</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"424.55\" cy=\"-18\" rx=\"38.19\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"424.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">CDH2</text>\n",
       "</g>\n",
       "<!-- VIM -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>VIM</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"510.55\" cy=\"-18\" rx=\"29.8\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"510.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">VIM</text>\n",
       "</g>\n",
       "<!-- MAP4K4 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>MAP4K4</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"609.55\" cy=\"-18\" rx=\"51.19\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"609.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">MAP4K4</text>\n",
       "</g>\n",
       "<!-- LATS1 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>LATS1</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"719.55\" cy=\"-18\" rx=\"40.89\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"719.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">LATS1</text>\n",
       "</g>\n",
       "<!-- LATS2 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>LATS2</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"819.55\" cy=\"-18\" rx=\"40.89\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"819.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">LATS2</text>\n",
       "</g>\n",
       "<!-- PTK2B -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>PTK2B</title>\n",
       "<ellipse fill=\"lightblue\" stroke=\"black\" cx=\"920.55\" cy=\"-18\" rx=\"42.49\" ry=\"18\"/>\n",
       "<text text-anchor=\"middle\" x=\"920.55\" y=\"-14.3\" font-family=\"Times,serif\" font-size=\"14.00\">PTK2B</text>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.graphs.Digraph at 0x7fb0eb65b310>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "network_visualizer = NetworkVisualizer(new_net1)\n",
    "network_visualizer.tissue_mapping(results_df)\n",
    "network_visualizer.render()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
